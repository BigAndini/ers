<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-realentity) on 2016-01-07 08:26:28.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace ErsBase\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * ErsBase\Entity\PaymentType
 *
 * @ORM\Entity()
 * @ORM\Table(name="payment_type", indexes={@ORM\Index(name="fk_PaymentType_Deadline1_idx", columns={"active_from_id"}), @ORM\Index(name="fk_PaymentType_Deadline2_idx", columns={"active_until_id"})})
 * @ORM\HasLifecycleCallbacks
 */
class PaymentType extends Base\PaymentType
{
    public function __construct()
    {
        parent::__construct();
    }

    public function setActiveFrom(Deadline $deadline) {
        return $this->setDeadlineRelatedByActiveFromId($deadline);
    }
    public function getActiveFrom() {
        return $this->getDeadlineRelatedByActiveFromId();
    }
    
    public function setActiveUntil(Deadline $deadline) {
        return $this->setDeadlineRelatedByActiveUntilId($deadline);
    }
    public function getActiveUntil() {
        return $this->getDeadlineRelatedByActiveUntilId();
    }
    
    /**
     * Calculates fees for this payment type for a given amount
     * 
     * @return float
     */
    public function calcFee($amount) {
        $fixFee = $this->getFixFee();
        $percentageFee = $amount*$this->getPercentageFee()/100;
        return $fixFee+$percentageFee;
    }
    
    /*
     * custom field names for hydrator
     */
    public function getCustomFieldNames() {
        return [
            /*
             * aditional SEPA fields
             */
            'iban',
            'bic',
            'owner',
            'owner_address1',
            'owner_address2',
            'owner_address3',
            'owner_address4',
            'bank_address1',
            'bank_address2',
            'bank_address3',
            'bank_address4',
            'bank_name',
            'bank_country',
           
            /*
             * additional iPayment fields
             */
            'account_id',
            'trxuser_id',
            'trx_currency',
            'trxpassword',
            'sec_key',
            'action',
            
            /*
             * additional PayPal fields
             */
            'sandbox_mode',
            'client_id',
            'client_secret',
            'log_file',
        ];
    }
    
    /*
     * Base function for settings
     */
    public function setSetting($key, $val = null) {
        $settings = \json_decode($this->getSettings(), true);
        $settings[$key] = $val;
        $this->setSettings(\json_encode($settings));
        
        return $this;
    }
    public function getSetting($key) {
        $settings = \json_decode($this->getSettings(), true);
        if(!empty($settings[$key])) {
            return $settings[$key];
        }
        return '';
    }
    
    /*
     * SEPA getter and setter
     */
    public function setIban($iban) {
        $this->setSetting('iban', $iban);
        return $this;
    }
    public function getIban() {
        return $this->getSetting('iban');
    }
    
    public function setBic($bic) {
        $this->setSetting('bic', $bic);
        return $this;
    }
    public function getBic() {
        return $this->getSetting('bic');
    }
    
    public function setOwner($owner) {
        $this->setSetting('owner', $owner);
        return $this;
    }
    public function getOwner() {
        return $this->getSetting('owner');
    }
    
    public function setOwnerAddress1($ownerAddress1) {
        $this->setSetting('ownerAddress1', $ownerAddress1);
        return $this;
    }
    public function getOwnerAddress1() {
        return $this->getSetting('ownerAddress1');
    }
    
    public function setOwnerAddress2($ownerAddress2) {
        $this->setSetting('ownerAddress2', $ownerAddress2);
        return $this;
    }
    public function getOwnerAddress2() {
        return $this->getSetting('ownerAddress2');
    }
    
    public function setOwnerAddress3($ownerAddress3) {
        $this->setSetting('ownerAddress3', $ownerAddress3);
        return $this;
    }
    public function getOwnerAddress3() {
        return $this->getSetting('ownerAddress3');
    }
    
    public function setOwnerAddress4($ownerAddress4) {
        $this->setSetting('ownerAddress4', $ownerAddress4);
        return $this;
    }
    public function getOwnerAddress4() {
        return $this->getSetting('ownerAddress4');
    }
    
    public function setBankAddress1($bankAddress1) {
        $this->setSetting('bankAddress1', $bankAddress1);
        return $this;
    }
    public function getBankAddress1() {
        return $this->getSetting('bankAddress1');
    }
    
    public function setBankAddress2($bankAddress2) {
        $this->setSetting('bankAddress2', $bankAddress2);
        return $this;
    }
    public function getBankAddress2() {
        return $this->getSetting('bankAddress2');
    }
    
    public function setBankAddress3($bankAddress3) {
        $this->setSetting('bankAddress3', $bankAddress3);
        return $this;
    }
    public function getBankAddress3() {
        return $this->getSetting('bankAddress3');
    }
    
    public function setBankAddress4($bankAddress4) {
        $this->setSetting('bankAddress4', $bankAddress4);
        return $this;
    }
    public function getBankAddress4() {
        return $this->getSetting('bankAddress4');
    }
    
    public function setBankName($bankName) {
        $this->setSetting('bankName', $bankName);
        return $this;
    }
    public function getBankName() {
        return $this->getSetting('bankName');
    }
    
    public function setBankCountry($bankCountry) {
        $this->setSetting('bankCountry', $bankCountry);
        return $this;
    }
    public function getBankCountry() {
        return $this->getSetting('bankCountry');
    }
    
    /*
     * iPayment getter and setter
     */
    public function setAccountId($value) {
        $this->setSetting('accountId', $value);
        return $this;
    }
    public function getAccountId() {
        return $this->getSetting('accountId');
    }
    
    public function setTrxuserId($value) {
        $this->setSetting('trxuserId', $value);
        return $this;
    }
    public function getTrxuserId() {
        return $this->getSetting('trxuserId');
    }
    
    public function setTrxCurrency($value) {
        $this->setSetting('trxCurrency', $value);
        return $this;
    }
    public function getTrxCurrency() {
        return $this->getSetting('trxCurrency');
    }
    
    public function setTrxpassword($value) {
        $this->setSetting('trxpassword', $value);
        return $this;
    }
    public function getTrxpassword() {
        return $this->getSetting('trxpassword');
    }
    
    public function setSecKey($value) {
        $this->setSetting('secKey', $value);
        return $this;
    }
    public function getSecKey() {
        return $this->getSetting('secKey');
    }
    
    public function setAction($value) {
        $this->setSetting('action', $value);
        return $this;
    }
    public function getAction() {
        return $this->getSetting('action');
    }
    
    /*
     * PayPal getter and setter
     */
    public function setSandboxMode($value) {
        $this->setSetting('sandboxMode', $value);
        return $this;
    }
    public function getSandboxMode() {
        return $this->getSetting('sandboxMode');
    }
    
    public function setClientId($value) {
        $this->setSetting('clientId', $value);
        return $this;
    }
    public function getClientId() {
        return $this->getSetting('clientId');
    }
    
    public function setClientSecret($value) {
        $this->setSetting('clientSecret', $value);
        return $this;
    }
    public function getClientSecret() {
        return $this->getSetting('clientSecret');
    }
    
    public function setLogFile($value) {
        $this->setSetting('logFile', $value);
        return $this;
    }
    public function getLogFile() {
        return $this->getSetting('logFile');
    }
}