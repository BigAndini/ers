-- MySQL Script generated by MySQL Workbench
-- 11/27/14 19:40:35
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ers
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ers
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ers` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `ers` ;

-- -----------------------------------------------------
-- Table `ers`.`Tax`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Tax` ;

CREATE TABLE IF NOT EXISTS `ers`.`Tax` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `percentage` FLOAT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Product` ;

CREATE TABLE IF NOT EXISTS `ers`.`Product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Tax_id` INT NOT NULL,
  `order` INT NULL,
  `name` VARCHAR(45) NULL,
  `shortDescription` VARCHAR(128) NULL,
  `longDescription` TEXT NULL,
  `active` TINYINT(1) NULL,
  `deleted` TINYINT(1) NULL,
  `personalized` TINYINT(1) NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Product_Tax1_idx` (`Tax_id` ASC),
  CONSTRAINT `fk_Product_Tax1`
    FOREIGN KEY (`Tax_id`)
    REFERENCES `ers`.`Tax` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`user` ;

CREATE TABLE IF NOT EXISTS `ers`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `display_name` VARCHAR(50) NULL,
  `password` VARCHAR(128) NULL,
  `state` SMALLINT NULL,
  `prename` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `emailCopy` VARCHAR(45) NULL,
  `active` TINYINT(1) NULL DEFAULT 1,
  `birthday` DATE NOT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`PaymentType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`PaymentType` ;

CREATE TABLE IF NOT EXISTS `ers`.`PaymentType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `days2payment` INT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Barcode`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Barcode` ;

CREATE TABLE IF NOT EXISTS `ers`.`Barcode` (
  `id` INT NOT NULL,
  `barcode` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Order` ;

CREATE TABLE IF NOT EXISTS `ers`.`Order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Purchaser_id` INT NOT NULL,
  `PaymentType_id` INT NOT NULL,
  `matchKey` VARCHAR(45) NULL,
  `invoiceDetail` TEXT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  `Barcode_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Order_User1_idx` (`Purchaser_id` ASC),
  INDEX `fk_Order_PaymentType1_idx` (`PaymentType_id` ASC),
  INDEX `fk_Order_Barcode1_idx` (`Barcode_id` ASC),
  CONSTRAINT `fk_Order_User1`
    FOREIGN KEY (`Purchaser_id`)
    REFERENCES `ers`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_PaymentType1`
    FOREIGN KEY (`PaymentType_id`)
    REFERENCES `ers`.`PaymentType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_Barcode1`
    FOREIGN KEY (`Barcode_id`)
    REFERENCES `ers`.`Barcode` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Package`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Package` ;

CREATE TABLE IF NOT EXISTS `ers`.`Package` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Order_id` INT NOT NULL,
  `Participant_id` INT NULL,
  `Barcode_id` INT NOT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`, `Order_id`),
  INDEX `fk_Package_Order1_idx` (`Order_id` ASC),
  INDEX `fk_Package_User1_idx` (`Participant_id` ASC),
  INDEX `fk_Package_Barcode1_idx` (`Barcode_id` ASC),
  CONSTRAINT `fk_Package_Order1`
    FOREIGN KEY (`Order_id`)
    REFERENCES `ers`.`Order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Package_User1`
    FOREIGN KEY (`Participant_id`)
    REFERENCES `ers`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Package_Barcode1`
    FOREIGN KEY (`Barcode_id`)
    REFERENCES `ers`.`Barcode` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Item` ;

CREATE TABLE IF NOT EXISTS `ers`.`Item` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Product_id` INT NULL,
  `Package_id` INT NOT NULL,
  `Package_Order_id` INT NOT NULL,
  `Barcode_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `shortDescription` VARCHAR(128) NULL,
  `longDescription` TEXT NULL,
  `price` VARCHAR(45) NULL,
  `amount` VARCHAR(45) NULL,
  `info` VARCHAR(45) NULL,
  `status` ENUM('ordered','paid','shipped','collected','cancelled') NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Item_Product1_idx` (`Product_id` ASC),
  INDEX `fk_Item_Package1_idx` (`Package_id` ASC, `Package_Order_id` ASC),
  INDEX `fk_Item_Barcode1_idx` (`Barcode_id` ASC),
  CONSTRAINT `fk_Item_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `ers`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Item_Package1`
    FOREIGN KEY (`Package_id` , `Package_Order_id`)
    REFERENCES `ers`.`Package` (`id` , `Order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Item_Barcode1`
    FOREIGN KEY (`Barcode_id`)
    REFERENCES `ers`.`Barcode` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`user_role` ;

CREATE TABLE IF NOT EXISTS `ers`.`user_role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `roleId` VARCHAR(45) NULL,
  `is_default` TINYINT(1) NULL,
  `parent_id` INT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Role_Role1_idx` (`parent_id` ASC),
  CONSTRAINT `fk_Role_Role1`
    FOREIGN KEY (`parent_id`)
    REFERENCES `ers`.`user_role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`access`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`access` ;

CREATE TABLE IF NOT EXISTS `ers`.`access` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NOT NULL,
  INDEX `fk_Access_Group_idx` (`role_id` ASC),
  INDEX `fk_Access_User1_idx` (`user_id` ASC),
  CONSTRAINT `fk_Access_Group`
    FOREIGN KEY (`role_id`)
    REFERENCES `ers`.`user_role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Access_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ers`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Log` ;

CREATE TABLE IF NOT EXISTS `ers`.`Log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `User_id` INT NOT NULL,
  `data` TEXT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Log_User1_idx` (`User_id` ASC),
  CONSTRAINT `fk_Log_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `ers`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Language` ;

CREATE TABLE IF NOT EXISTS `ers`.`Language` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `flag` VARCHAR(45) NULL,
  `locale` VARCHAR(45) NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Settings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Settings` ;

CREATE TABLE IF NOT EXISTS `ers`.`Settings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(45) NULL,
  `value` TEXT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Currency`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Currency` ;

CREATE TABLE IF NOT EXISTS `ers`.`Currency` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `symbol` VARCHAR(45) NULL,
  `exchange2euro` FLOAT NULL,
  `short` VARCHAR(45) NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`BankAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`BankAccount` ;

CREATE TABLE IF NOT EXISTS `ers`.`BankAccount` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `bank` VARCHAR(45) NULL,
  `iban` VARCHAR(45) NULL,
  `bic` VARCHAR(45) NULL,
  `kto` VARCHAR(45) NULL,
  `blz` VARCHAR(45) NULL,
  `statementFormat` TEXT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`BankStatement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`BankStatement` ;

CREATE TABLE IF NOT EXISTS `ers`.`BankStatement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `BankAccount_id` INT NOT NULL,
  `hash` TEXT NULL,
  `BankStatementcol1` TEXT NULL,
  `BankStatementcol2` TEXT NULL,
  `BankStatementcol3` TEXT NULL,
  `BankStatementcol4` TEXT NULL,
  `BankStatementcol5` TEXT NULL,
  `BankStatementcol6` TEXT NULL,
  `BankStatementcol7` TEXT NULL,
  `BankStatementcol8` TEXT NULL,
  `BankStatementcol9` TEXT NULL,
  `BankStatementcol10` TEXT NULL,
  `BankStatementcol11` TEXT NULL,
  `BankStatementcol12` TEXT NULL,
  `BankStatementcol13` TEXT NULL,
  `BankStatementcol14` TEXT NULL,
  `BankStatementcol15` TEXT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_BankStatement_BankAccount1_idx` (`BankAccount_id` ASC),
  CONSTRAINT `fk_BankStatement_BankAccount1`
    FOREIGN KEY (`BankAccount_id`)
    REFERENCES `ers`.`BankAccount` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Match`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Match` ;

CREATE TABLE IF NOT EXISTS `ers`.`Match` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `BankStatement_id` INT NOT NULL,
  `Order_id` INT NOT NULL,
  `Admin_id` INT NOT NULL,
  `comment` TEXT NULL,
  `status` ENUM('paid','partial','overpaid','refund','check') NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Matching_BankStatement1_idx` (`BankStatement_id` ASC),
  INDEX `fk_Matching_Order1_idx` (`Order_id` ASC),
  INDEX `fk_Matching_User1_idx` (`Admin_id` ASC),
  CONSTRAINT `fk_Matching_BankStatement1`
    FOREIGN KEY (`BankStatement_id`)
    REFERENCES `ers`.`BankStatement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Matching_Order1`
    FOREIGN KEY (`Order_id`)
    REFERENCES `ers`.`Order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Matching_User1`
    FOREIGN KEY (`Admin_id`)
    REFERENCES `ers`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`ProductPrice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`ProductPrice` ;

CREATE TABLE IF NOT EXISTS `ers`.`ProductPrice` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Product_id` INT NOT NULL,
  `charge` VARCHAR(45) NULL,
  `updated` VARCHAR(45) NULL,
  `created` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ProductPrice_Product1_idx` (`Product_id` ASC),
  CONSTRAINT `fk_ProductPrice_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `ers`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`ProductVariant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`ProductVariant` ;

CREATE TABLE IF NOT EXISTS `ers`.`ProductVariant` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Product_id` INT NOT NULL,
  `order` INT NULL,
  `name` VARCHAR(45) NULL,
  `type` ENUM('text','date','select') NULL,
  `preselection` TEXT NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ProductVariant_Product1_idx` (`Product_id` ASC),
  CONSTRAINT `fk_ProductVariant_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `ers`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`ProductVariantValue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`ProductVariantValue` ;

CREATE TABLE IF NOT EXISTS `ers`.`ProductVariantValue` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ProductVariant_id` INT NOT NULL,
  `order` INT NULL,
  `value` VARCHAR(45) NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ProductVariantValue_ProductVariant1_idx` (`ProductVariant_id` ASC),
  CONSTRAINT `fk_ProductVariantValue_ProductVariant1`
    FOREIGN KEY (`ProductVariant_id`)
    REFERENCES `ers`.`ProductVariant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Counter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Counter` ;

CREATE TABLE IF NOT EXISTS `ers`.`Counter` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Product_id` INT NOT NULL,
  `ProductVariantValue_id` INT NULL,
  `name` VARCHAR(45) NULL,
  `amount` VARCHAR(45) NULL,
  `value` VARCHAR(45) NULL,
  `updated` VARCHAR(45) NULL,
  `created` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Counter_Product1_idx` (`Product_id` ASC),
  INDEX `fk_Counter_ProductVariantValue1_idx` (`ProductVariantValue_id` ASC),
  CONSTRAINT `fk_Counter_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `ers`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Counter_ProductVariantValue1`
    FOREIGN KEY (`ProductVariantValue_id`)
    REFERENCES `ers`.`ProductVariantValue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`ProductInfo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`ProductInfo` ;

CREATE TABLE IF NOT EXISTS `ers`.`ProductInfo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Product_id` INT NOT NULL,
  `key` VARCHAR(45) NULL,
  `value` VARCHAR(45) NULL,
  `updated` VARCHAR(45) NULL,
  `created` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ProductInfo_Product1_idx` (`Product_id` ASC),
  CONSTRAINT `fk_ProductInfo_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `ers`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`ItemVariant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`ItemVariant` ;

CREATE TABLE IF NOT EXISTS `ers`.`ItemVariant` (
  `id` INT NOT NULL,
  `Item_id` INT NOT NULL,
  `ProductVariant_id` INT NULL,
  `ProductVariantValue_id` INT NULL,
  `name` VARCHAR(45) NULL,
  `value` VARCHAR(45) NULL,
  `updated` TIMESTAMP NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ItemVariant_Item1_idx` (`Item_id` ASC),
  CONSTRAINT `fk_ItemVariant_Item1`
    FOREIGN KEY (`Item_id`)
    REFERENCES `ers`.`Item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`ProductPackage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`ProductPackage` ;

CREATE TABLE IF NOT EXISTS `ers`.`ProductPackage` (
  `id` INT NOT NULL,
  `Product_id` INT NOT NULL,
  `SubProduct_id` INT NOT NULL,
  `active` TINYINT(1) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ProductPackage_Product1_idx` (`Product_id` ASC),
  INDEX `fk_ProductPackage_Product2_idx` (`SubProduct_id` ASC),
  CONSTRAINT `fk_ProductPackage_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `ers`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProductPackage_Product2`
    FOREIGN KEY (`SubProduct_id`)
    REFERENCES `ers`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`PriceLimit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`PriceLimit` ;

CREATE TABLE IF NOT EXISTS `ers`.`PriceLimit` (
  `id` INT NOT NULL,
  `type` ENUM('agegroup','deadline','counter') NULL,
  `value` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ers`.`Limitation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ers`.`Limitation` ;

CREATE TABLE IF NOT EXISTS `ers`.`Limitation` (
  `PriceLimit_id` INT NOT NULL,
  `ProductPrice_id` INT NOT NULL,
  INDEX `fk_Limitation_PriceLimit1_idx` (`PriceLimit_id` ASC),
  INDEX `fk_Limitation_ProductPrice1_idx` (`ProductPrice_id` ASC),
  CONSTRAINT `fk_Limitation_PriceLimit1`
    FOREIGN KEY (`PriceLimit_id`)
    REFERENCES `ers`.`PriceLimit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Limitation_ProductPrice1`
    FOREIGN KEY (`ProductPrice_id`)
    REFERENCES `ers`.`ProductPrice` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `ers` ;

-- -----------------------------------------------------
-- Placeholder table for view `ers`.`user_role_linker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ers`.`user_role_linker` (`user_id` INT, `role_id` INT);

-- -----------------------------------------------------
-- View `ers`.`user_role_linker`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `ers`.`user_role_linker` ;
DROP TABLE IF EXISTS `ers`.`user_role_linker`;
USE `ers`;
CREATE  OR REPLACE VIEW `user_role_linker` AS SELECT user_id,roleId as role_id FROM access JOIN user_role ON access.role_id=user_role.id
;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
